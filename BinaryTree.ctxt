#BlueJ class context
comment0.params=
comment0.target=BinaryTree()
comment0.text=Construct\ an\ empty\ BinaryTree
comment1.params=root
comment1.target=BinaryTree(BinaryTree.Node)
comment1.text=\r\n\ Construct\ a\ BinaryTree\ with\ a\ specified\ root.\r\n\ Should\ only\ be\ used\ by\ subclasses.\r\n\ @param\ root\ The\ node\ that\ is\ the\ root\ of\ the\ tree.\r\n
comment2.params=data\ leftTree\ rightTree
comment2.target=BinaryTree(java.lang.Object,\ BinaryTree,\ BinaryTree)
comment2.text=\r\n\ Constructs\ a\ new\ binary\ tree\ with\ data\ in\ its\ root,leftTree\r\n\ as\ its\ left\ subtree\ and\ rightTree\ as\ its\ right\ subtree.\r\n
comment3.params=
comment3.target=BinaryTree\ getLeftSubtree()
comment3.text=\r\n\ Return\ the\ left\ subtree.\r\n\ @return\ The\ left\ subtree\ or\ null\ if\ either\ the\ root\ or\r\n\ the\ left\ subtree\ is\ null\r\n
comment4.params=
comment4.target=BinaryTree\ getRightSubtree()
comment4.text=\r\n\ Return\ the\ right\ sub-tree\r\n\ @return\ the\ right\ sub-tree\ or\r\n\ \ \ \ \ \ \ \ \ null\ if\ either\ the\ root\ or\ the\r\n\ \ \ \ \ \ \ \ \ right\ subtree\ is\ null.\r\n
comment5.params=
comment5.target=java.lang.Object\ getData()
comment5.text=\r\n\ Return\ the\ data\ field\ of\ the\ root\r\n\ @return\ the\ data\ field\ of\ the\ root\r\n\ \ \ \ \ \ \ \ \ or\ null\ if\ the\ root\ is\ null\r\n
comment6.params=
comment6.target=boolean\ isLeaf()
comment6.text=\r\n\ Determine\ whether\ this\ tree\ is\ a\ leaf.\r\n\ @return\ true\ if\ the\ root\ has\ no\ children\r\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment8.params=node\ depth\ sb
comment8.target=void\ preOrderTraverse(BinaryTree.Node,\ int,\ java.lang.StringBuilder)
comment8.text=\r\n\ Perform\ a\ preorder\ traversal.\r\n\ @param\ node\ The\ local\ root\r\n\ @param\ depth\ The\ depth\r\n\ @param\ sb\ The\ string\ buffer\ to\ save\ the\ output\r\n
comment9.params=bR
comment9.target=BinaryTree\ readBinaryTree(java.io.BufferedReader)
comment9.text=\r\n\ Method\ to\ read\ a\ binary\ tree.\r\n\ @pre\ The\ input\ consists\ of\ a\ preorder\ traversal\r\n\ \ \ \ \ \ of\ the\ binary\ tree.\ The\ line\ "null"\ indicates\ a\ null\ tree.\r\n\ @param\ bR\ The\ input\ file\r\n\ @return\ The\ binary\ tree\r\n\ @throws\ IOException\ If\ there\ is\ an\ input\ error\r\n
numComments=10
